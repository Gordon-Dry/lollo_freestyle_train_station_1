local _constants = require('lollo_freestyle_train_station.constants')
-- local constructionutil = require "constructionutil"
local moduleHelpers = require('lollo_freestyle_train_station.moduleHelpers')
local modulesutil = require "modulesutil"
-- local transfUtils = require('lollo_freestyle_train_station.transfUtils')
local transfUtilsUG = require "transf"
-- local vec3 = require "vec3"


function data()

return {
	availability = {
		yearFrom = 0,
		yearTo = 0
	},
	category = {
		categories = { "street access", },
	},
	cost = {
		price = 0,
	},
	description = {
		name = _("PassengerPlatformLiftName"),
		description = _("PassengerPlatformLiftDesc"),
		icon = "ui/construction/station/street/cargo_area_inner_12x12.tga"
	},
	metadata = { },
	order = {
		value = 1,
	},
	type = _constants.passengerPlatformLiftModuleType,
	updateFn = function(result, slotTransf, tag, slotId, addModelFn, params, updateScriptParams)
		local nTerminal, nTrackEdge, baseId = result.demangleId(slotId)
		if not nTerminal or not nTrackEdge or not baseId then return end

		-- LOLLO NOTE tag looks like '__module_201030', never mind what you write into it, the game overwrites it
		-- in base_config.lua
		-- Set it into the models so the game knows what module they belong to.

		local buildingHeight = moduleHelpers.tryGetLiftHeight(params, nTerminal, nTrackEdge)
		if not(buildingHeight) then return end
		local buildingModelId = moduleHelpers.tryGetPlatformLiftModelId(params, nTerminal, nTrackEdge)
		if not(buildingModelId) then return end

		-- print('buildingHeight =', buildingHeight)
		-- print('buildingModelId =', buildingModelId)
		result.models[#result.models + 1] = {
			id = buildingModelId,
			slotId = slotId,
			transf = slotTransf,
			tag = tag
		}

		-- add some deco
		local _clockY = -2.9 -- 2.8
		if buildingHeight == 10 then
			result.models[#result.models + 1] = {
				id = 'station/rail/asset/era_c_big_clock.mdl',
				slotId = slotId,
				transf = transfUtilsUG.mul(
					slotTransf,
					{ 1, 0, 0, 0,  0, 1, 0, 0,  0, 0, 1, 0,  0, _clockY, - 3, 1 }
				),
				tag = tag
			}
		elseif buildingHeight >= 15 then
			result.models[#result.models + 1] = {
				id = 'station/rail/asset/era_c_big_clock.mdl',
				slotId = slotId,
				transf = transfUtilsUG.mul(
					slotTransf,
					{ 1, 0, 0, 0,  0, 1, 0, 0,  0, 0, 1, 0,  0, _clockY, - 5, 1 }
				),
				tag = tag
			}
		end

		local _tableY = 2.2
		if buildingHeight == 10 then
			result.models[#result.models + 1] = {
				id = 'lollo_freestyle_train_station/asset/tabellone_hanging.mdl',
				slotId = slotId,
				transf = transfUtilsUG.mul(
					slotTransf,
					{ 1, 0, 0, 0,  0, 1, 0, 0,  0, 0, 1, 0,  0, _tableY, 4 - buildingHeight, 1 }
				),
				tag = tag
			}
		elseif buildingHeight >= 15 then
			result.models[#result.models + 1] = {
				id = 'lollo_freestyle_train_station/asset/tabellone_hanging.mdl',
				slotId = slotId,
				transf = transfUtilsUG.mul(
					slotTransf,
					{ 1, 0, 0, 0,  0, 1, 0, 0,  0, 0, 1, 0,  0, _tableY, 3.0 - buildingHeight, 1 }
				),
				tag = tag
			}
		end

		local groundFace = { -- the ground faces ignore z, the alignment lists don't
			{-6.5, -4.2, -buildingHeight, 1},
			{-6.5, 3.8, -buildingHeight, 1},
			{6.5, 3.8, -buildingHeight, 1},
			{6.5, -4.2, -buildingHeight, 1},
		}
		modulesutil.TransformFaces(slotTransf, groundFace)
		table.insert(
			result.groundFaces,
			{
				face = groundFace,
				modes = {
					{
						type = 'FILL',
						key = 'shared/asphalt_01.gtex.lua' --'shared/asphalt_01.gtex.lua'
					},
					--[[                         {
						type = 'STROKE_INNER',
						key = 'shared/asphalt_01.gtex.lua',
					},
					]]
					{
						type = 'STROKE_OUTER',
						key = 'shared/asphalt_01.gtex.lua' --'street_border.lua'
					}
				}
			}
		)

		local terrainAlignmentList = {
			faces = { groundFace },
			optional = true,
			slopeHigh = 99,
			slopeLow = 0.9, --0.1,
			type = 'EQUAL',
		}
		result.terrainAlignmentLists[#result.terrainAlignmentLists + 1] = terrainAlignmentList
	end,

	getModelsFn = function(params)
		return {
			{
				id = 'lollo_freestyle_train_station/lift/platform_lifts_9_5_20.mdl',
				transf = { 1, 0, 0, 0,  0, 1, 0, 0,  0, 0, 1, 0,  0, 0, 0, 1 },
			},
		}
	end
}

end
