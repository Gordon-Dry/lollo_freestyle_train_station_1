local _constants = require('lollo_freestyle_train_station.constants')
-- local constructionutil = require "constructionutil"
local moduleHelpers = require('lollo_freestyle_train_station.moduleHelpers')
-- local modulesutil = require "modulesutil"
local transfUtils = require('lollo_freestyle_train_station.transfUtils')
local transfUtilsUG = require "transf"
local vec3 = require "vec3"


function data()

return {
	availability = {
		yearFrom = 0,
		yearTo = 0
	},
	category = {
		categories = { "passenger-road-access", },
	},
	cost = {
		price = 0,
	},
	description = {
		name = _("OpenStairsExitName_32m"),
		description = _("OpenStairsExitDesc"),
		icon = "ui/lollo_freestyle_train_station/openStairsExit32m.tga"
	},
	metadata = { },
	order = {
		value = 65,
	},
	type = _constants.openStairsExitModuleType,
	updateFn = function(result, slotTransf, tag, slotId, addModelFn, params, updateScriptParams)
		local nTerminal, nTrackEdge, baseId = result.demangleId(slotId)
		if not nTerminal or not baseId then return end

		local eraPrefix = moduleHelpers.getEraPrefix(params, nTerminal, nTrackEdge)
		local modelId = moduleHelpers.openStairs.getPedestrianBridgeModelId(32, eraPrefix)

		result.models[#result.models + 1] = {
			id = modelId,
			slotId = slotId,
			transf = moduleHelpers.openStairs.getExitModelTransf(slotTransf, slotId, params),
			tag = tag
		}
		result.models[#result.models + 1] = {
			id = 'lollo_freestyle_train_station/passenger_lane.mdl',
			slotId = slotId,
			transf = transfUtilsUG.mul(slotTransf, {1, 0, 0, 0,  0, 1, 0, 0,  0, 0, 1, 0,  -1, 0, 0, 1}),
			tag = tag
		}
	end,

	getModelsFn = function(params)
		return {
			{
				id = 'lollo_freestyle_train_station/open_stairs/era_c_bridge_chunk_32m.mdl',
				transf = transfUtilsUG.transl(vec3.new(0.0, 0.0, 0.0)),
			},
		}
	end
}

end
