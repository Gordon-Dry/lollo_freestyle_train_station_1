local _constants = require('lollo_freestyle_train_station.constants')
-- local constructionutil = require "constructionutil"
local moduleHelpers = require('lollo_freestyle_train_station.moduleHelpers')
-- local modulesutil = require "modulesutil"
local openLiftOpenStairsHelpers = require('lollo_freestyle_train_station.openLiftOpenStairsHelpers')
local transfUtils = require('lollo_freestyle_train_station.transfUtils')
local transfUtilsUG = require "transf"


function data()
	return {
		availability = {
			yearFrom = 0,
			yearTo = 0
		},
		category = {
			categories = { "passenger-road-access-stairs", },
		},
		cost = {
			price = 0,
		},
		description = {
			name = _("OpenStairsExitWithEdgeName_2m"),
			description = _("OpenStairsExitWithEdgeDesc"),
			icon = "ui/lollo_freestyle_train_station/openStairsExitWithEdge2m.tga"
		},
		metadata = { },
		order = {
			value = 61,
		},
		type = _constants.openStairsExitModuleType,
		updateFn = function(result, slotTransf, tag, slotId, addModelFn, params, updateScriptParams)
			local nTerminal, nTrackEdge, baseId = result.demangleId(slotId)
			if not nTerminal or not baseId then return end

			local eraPrefix = moduleHelpers.getEraPrefix(params, nTerminal, nTrackEdge)
			local modelId = moduleHelpers.openStairs.getPedestrianBridgeModelId(2, eraPrefix, true)
			local transf = moduleHelpers.openStairs.getExitModelTransf(slotTransf, slotId, params)

			result.models[#result.models + 1] = {
				id = modelId,
				slotId = slotId,
				transf = transf,
				tag = tag
			}
			result.models[#result.models + 1] = {
				id = 'lollo_freestyle_train_station/passenger_lane.mdl',
				slotId = slotId,
				transf = transfUtilsUG.mul(slotTransf, {1, 0, 0, 0,  0, 1, 0, 0,  0, 0, 1, 0,  -1, 0, 0, 1}),
				tag = tag
			}

			local _openStairsRefData = openLiftOpenStairsHelpers.getData4Era(eraPrefix)
			table.insert(
				result.edgeLists,
				{
					alignTerrain = false, -- only align on ground and in tunnels
					edges = transfUtils.getPosTanX2Transformed(
						{
							{ { 2, 0, 0 }, { 1, 0, 0 } },  -- node 0 pos, tan
							{ { 3, 0, 0 }, { 1, 0, 0 } },  -- node 1 pos, tan
						},
						transf
					),
					edgeType = 'BRIDGE',
					edgeTypeName = _openStairsRefData.bridgeTypeName_withRailing,
					freeNodes = { 1 },
					params = {
						tramTrackType  = 'NO',
						type = _openStairsRefData.streetTypeName_noBridge,
					},
					snapNodes = {},
					-- snapNodes = _bridgeChunkLength == 0 and { } or { 1 },
					tag2nodes = {},
					type = 'STREET'
				}
			)
		end,

		getModelsFn = function(params)
			return {
				{
					id = 'lollo_freestyle_train_station/open_stairs/era_c_bridge_chunk_4m.mdl',
					transf = _constants.idTransf,
				},
			}
		end
	}
end
