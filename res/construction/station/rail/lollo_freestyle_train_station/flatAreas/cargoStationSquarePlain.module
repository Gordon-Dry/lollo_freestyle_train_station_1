local _constants = require('lollo_freestyle_train_station.constants')
-- local constructionutil = require "constructionutil"
local logger = require('lollo_freestyle_train_station.logger')
local moduleHelpers = require('lollo_freestyle_train_station.moduleHelpers')
local modulesutil = require "modulesutil"
local transfUtils = require('lollo_freestyle_train_station.transfUtils')
local transfUtilsUG = require "transf"


function data()

return {
	availability = {
		yearFrom = 0,
		yearTo = 0
	},
	category = {
		categories = { "cargo-road-access", },
	},
	cost = {
		price = 0,
	},
	description = {
		name = _("CargoStationSquarePlainName"),
		description = _("CargoStationSquarePlainDesc"),
		icon = "ui/lollo_freestyle_train_station/cargoStationSquarePlain.tga"
	},
	metadata = { },
	order = {
		value = 2, -- LOLLO NOTE put this first to speed up station configuration, since it has very few slots
	},
	type = _constants.cargoStationSquareModuleType,
	updateFn = function(result, slotTransf, tag, slotId, addModelFn, params, updateScriptParams)
		local nTerminal, nTrackEdge, baseId = result.demangleId(slotId)
		if not nTerminal or not nTrackEdge or not baseId then return end

		local eraPrefix = moduleHelpers.getEraPrefix(params, nTerminal, nTrackEdge)
		local modelId = 'lollo_freestyle_train_station/railroad/flatSides/cargo/'.. eraPrefix ..'station_square_plain.mdl'
		result.models[#result.models + 1] = {
			id = modelId,
			slotId = slotId,
			transf = slotTransf,
			tag = tag
		}
		moduleHelpers.lifts.doTerrain4SideLifts(0, slotTransf, result,
		_constants.era_c_groundFacesFillKey, _constants.era_c_groundFacesStrokeOuterKey)
	end,

	getModelsFn = function(params)
		return {
			{
				id = 'lollo_freestyle_train_station/railroad/flatSides/cargo/era_c_station_square_plain.mdl',
				transf = _constants.idTransf,
			},
		}
	end
}

end
