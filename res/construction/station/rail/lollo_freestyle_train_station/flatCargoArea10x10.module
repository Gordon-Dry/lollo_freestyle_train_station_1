local _constants = require('lollo_freestyle_train_station.constants')
-- local constructionutil = require "constructionutil"
local moduleHelpers = require('lollo_freestyle_train_station.moduleHelpers')
local modulesutil = require "modulesutil"
local transfUtils = require('lollo_freestyle_train_station.transfUtils')
local transfUtilsUG = require "transf"
local vec3 = require "vec3"


function data()

return {
	availability = {
		yearFrom = 0,
		yearTo = 0
	},
	category = {
		categories = { "street access", },
	},
	cost = {
		price = 0,
	},
	description = {
		name = _("FlatCargoArea10x10Name"),
		description = _("FlatCargoArea10x10Desc"),
		icon = "ui/construction/station/street/cargo_area_inner_12x12.tga"
	},
	metadata = { },
	order = {
		value = 13,
	},
	-- skipCollision = true,
	type = _constants.flatCargoArea10x10ModuleType,
	updateFn = function(result, slotTransf, tag, slotId, addModelFn, params, updateScriptParams)
		local nTerminal, nTrackEdge, baseId = result.demangleId(slotId)
		if not nTerminal or not baseId then return end

		result.models[#result.models + 1] = {
			-- id = 'lollo_freestyle_train_station/icon/green.mdl',
			id = _constants.flatCargoArea10x10ModelFileName,
			slotId = slotId,
			transf = slotTransf,
			tag = tag
		}

		local groundFace = {
			{-5.5, -6, 0, 1},
			{-5.5, 6, 0, 1},
			{8.5, 6, 0, 1},
			{8.5, -6, 0, 1},
		}
		modulesutil.TransformFaces(slotTransf, groundFace)
		result.groundFaces[#result.groundFaces + 1] = moduleHelpers.getGroundFace(groundFace, 'shared/asphalt_01.gtex.lua')

		local terrainAlignmentList = {
			faces = {
				{
					{-5, -6, 0, 1},
					{-5, 6, 0, 1},
					{3.5, 6, 0, 1},
					{3.5, -6, 0, 1},
				},
				{
					{3.5, -6, 0, 1},
					{3.5, 6, 0, 1},
					{8.5, 6, -1.2, 1},
					{8.5, -6, -1.2, 1},
				}
			},
			optional = true,
        	slopeHigh = 10, --99,
        	slopeLow = 0.9, --0.1,
			type = 'EQUAL',
		}
		for _, face in pairs(terrainAlignmentList.faces) do
			modulesutil.TransformFaces(slotTransf, face)
		end
		-- result.terrainAlignmentLists[#result.terrainAlignmentLists + 1] = moduleHelpers.getTerrainAlignmentList(terrainFaces, 0)
		result.terrainAlignmentLists[#result.terrainAlignmentLists + 1] = terrainAlignmentList
	end,

	getModelsFn = function(params)
		return {
			{
				id = _constants.flatCargoArea10x10ModelFileName,
				transf = transfUtilsUG.transl(vec3.new(0.0, 0.0, 0.0)),
			},
		}
	end
}

end
