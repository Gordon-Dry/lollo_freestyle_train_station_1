local _constants = require('lollo_freestyle_train_station.constants')
-- local constructionutil = require "constructionutil"
local moduleHelpers = require('lollo_freestyle_train_station.moduleHelpers')
-- local modulesutil = require "modulesutil"
-- local slotHelpers = require('lollo_freestyle_train_station.slotHelpers')
-- local transfUtils = require('lollo_freestyle_train_station.transfUtils')
-- local transfUtilsUG = require "transf"
-- local vec3 = require "vec3"


function data()
	return {
		availability = {
			yearFrom = 0,
			yearTo = 0
		},
		category = {
			categories = { "cargo-platform-extensions", },
		},
		cost = {
			price = 0,
		},
		description = {
			name = _("SlopedCargoAreaWaiting1x20Name"),
			description = _("SlopedCargoAreaWaiting1x20Desc"),
			icon = "ui/lollo_freestyle_train_station/cargo_area_waiting_1x20.tga"
		},
		metadata = { },
		order = {
			value = 26,
		},
		type = _constants.slopedCargoArea1x20ModuleType,
		updateFn = function(result, slotTransf, tag, slotId, addModelFn, params, updateScriptParams)
			local nTerminal, nTrackEdge, baseId = result.demangleId(slotId)
			if not nTerminal or not nTrackEdge or not baseId then return end

			-- local innerDegree = moduleHelpers.slopedAreas.addModels(result, tag, params, nTerminal, nTrackEdge, 20, _constants.slopedCargoArea1x20ModelFileName, _constants.cargoWaitingAreaCentredModelFileName)
			-- moduleHelpers.slopedAreas.doTerrain(result, slotTransf, params, nTerminal, nTrackEdge, innerDegree, 20)

			-- LOLLO TODO this works, except the terrain makes ugly bends under the platform edge.
			-- it seems the invisible platform is the culprit
			local areaProperties = moduleHelpers.slopedAreas.getModelProperties(result, tag, params, nTerminal, nTrackEdge, 20, _constants.cargoWaitingAreaCentredModelFileName)
			local faces = {}
			for _, pos1234 in pairs(areaProperties.terrainCoordinates) do
				local face = {}
				for i = 1, 4 do
					-- face[i] = { pos1234[i][1], pos1234[i][2], pos1234[i][3] + result.laneZs[nTerminal] - _constants.platformSideBitsZ, 0 }
					face[i] = { pos1234[i][1], pos1234[i][2], pos1234[i][3], 0 }
				end
				faces[#faces+1] = face
				result.groundFaces[#result.groundFaces + 1] = {
					face = face, -- LOLLO NOTE Z is ignored here
					loop = true,
					modes = {
						{
							type = 'FILL',
							key = 'shared/asphalt_01.gtex.lua'
						}
					}
				}
				-- result.terrainAlignmentLists[#result.terrainAlignmentLists + 1] = moduleHelpers.getTerrainAlignmentList(face, 0, 'EQUAL', 1, 0.5)
			end
			result.terrainAlignmentLists[#result.terrainAlignmentLists + 1] = {
				faces = faces,
				optional = true,
				slopeHigh = 10.75,
				slopeLow = 0.01, --0.25,
				type = 'EQUAL', -- GREATER, LESS
			}
		end,

		getModelsFn = function(params)
			local results = {}
			for y = -10, 10 do
				results[#results+1] = {
					id = _constants.slopedCargoArea1x20ModelFileName,
					transf = {1, 0, 0, 0,  0, 1, 0, 0,  0, 0, 1, 0,  0, y, 0, 1},
				}
			end
			return results
		end
	}
end
