local _constants = require('lollo_freestyle_train_station.constants')
-- local constructionutil = require "constructionutil"
local moduleHelpers = require('lollo_freestyle_train_station.moduleHelpers')
-- local modulesutil = require "modulesutil"
-- local transfUtils = require('lollo_freestyle_train_station.transfUtils')
-- local transfUtilsUG = require "transf"
-- local vec3 = require "vec3"


function data()
	return {
		availability = {
			yearFrom = 0,
			yearTo = 0
		},
		category = {
			categories = { "passenger-platform-extensions", },
		},
		cost = {
			price = 0,
		},
		description = {
			name = _("SlopedPassengerArea1x10Name"),
			description = _("SlopedPassengerArea1x10Desc"),
			icon = "ui/lollo_freestyle_train_station/passenger_area_1x10.tga"
		},
		metadata = { },
		order = {
			value = 23,
		},
		type = _constants.slopedPassengerArea1x10ModuleType,
		updateFn = function(result, slotTransf, tag, slotId, addModelFn, params, updateScriptParams)
			local nTerminal, nTrackEdge, baseId = result.demangleId(slotId)
			if not nTerminal or not nTrackEdge or not baseId then return end

			local innerDegree = moduleHelpers.slopedAreas.addModels(result, tag, params, nTerminal, nTrackEdge, 10, _constants.slopedPassengerArea1x10ModelFileName)
			moduleHelpers.slopedAreas.doTerrain(result, slotTransf, params, nTerminal, nTrackEdge, innerDegree, 10)
		end,

		getModelsFn = function(params)
			local results = {}
			for y = -5, 5 do
				results[#results+1] = {
					id = _constants.slopedPassengerArea1x10ModelFileName,
					transf = {1, 0, 0, 0,  0, 1, 0, 0,  0, 0, 1, 0,  0, y, 0, 1},
				}
			end
			return results
		end
	}
end
